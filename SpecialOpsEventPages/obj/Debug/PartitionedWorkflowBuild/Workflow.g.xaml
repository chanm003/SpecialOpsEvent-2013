<?xml version="1.0" encoding="utf-8"?>
<ss:Workflow xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:msdad="clr-namespace:Microsoft.SharePoint.DesignTime.Activities.Design;assembly=Microsoft.SharePoint.DesignTime.Activities.Design" xmlns:p="wf://workflow.windows.net/$Activities" xmlns:p1="http://schemas.microsoft.com/workflow/2012/07/xaml/activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ss="clr-namespace:SpecialOpsEventPages.SendMailMessage;assembly=SpecialOpsEventPages" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Text</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.Client.ServerRuntime</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.DesignTime.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>SpecialOpsEventPages</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <ss:Workflow.Implementation>
    <Sequence DisplayName="Root">
      <Sequence.Variables>
        <Variable x:TypeArguments="p1:DynamicValue" Name="props" />
        <Variable x:TypeArguments="sco:Collection(x:String)" Name="Recipients" />
        <Variable x:TypeArguments="sco:Collection(x:String)" Name="CC" />
        <Variable x:TypeArguments="x:String" Name="Title" />
        <Variable x:TypeArguments="x:String" Name="MessageBody" />
      </Sequence.Variables>
      <Sequence DisplayName="Get Properties of Item">
        <p:LookupSPListItem ItemGuid="{x:Null}" Properties="{x:Null}">
          <p:LookupSPListItem.ItemId>
            <InArgument x:TypeArguments="x:Int32">
              <p1:ExpressionContainerValue x:TypeArguments="x:Int32">
                <p:GetCurrentItemId />
              </p1:ExpressionContainerValue>
            </InArgument>
          </p:LookupSPListItem.ItemId>
          <p:LookupSPListItem.ListId>
            <InArgument x:TypeArguments="s:Guid">
              <p1:ExpressionContainerValue x:TypeArguments="s:Guid">
                <p:GetCurrentListId />
              </p1:ExpressionContainerValue>
            </InArgument>
          </p:LookupSPListItem.ListId>
          <p:LookupSPListItem.Result>
            <OutArgument x:TypeArguments="p1:DynamicValue">
              <mca:CSharpReference x:TypeArguments="p1:DynamicValue">props</mca:CSharpReference>
            </OutArgument>
          </p:LookupSPListItem.Result>
        </p:LookupSPListItem>
        <p1:GetODataProperties DisplayName="GetDynamicValueProperties">
          <p1:GetODataProperties.Source>
            <InArgument x:TypeArguments="p1:DynamicValue">
              <mca:CSharpValue x:TypeArguments="p1:DynamicValue">props</mca:CSharpValue>
            </InArgument>
          </p1:GetODataProperties.Source>
          <scg:Dictionary x:TypeArguments="x:String, OutArgument">
            <OutArgument x:TypeArguments="sco:Collection(x:String)" x:Key="ToId/results">
              <mca:CSharpReference x:TypeArguments="sco:Collection(x:String)">Recipients</mca:CSharpReference>
            </OutArgument>
            <OutArgument x:TypeArguments="sco:Collection(x:String)" x:Key="CCId/results">
              <mca:CSharpReference x:TypeArguments="sco:Collection(x:String)">CC</mca:CSharpReference>
            </OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="Title">
              <mca:CSharpReference x:TypeArguments="x:String">Title</mca:CSharpReference>
            </OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="MessageBody">
              <mca:CSharpReference x:TypeArguments="x:String">MessageBody</mca:CSharpReference>
            </OutArgument>
          </scg:Dictionary>
        </p1:GetODataProperties>
      </Sequence>
      <Sequence DisplayName="Send Email">
        <p:Email AdditionalHeaders="{x:Null}" BCC="{x:Null}">
          <p:Email.Body>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">MessageBody</mca:CSharpValue>
            </InArgument>
          </p:Email.Body>
          <p:Email.CC>
            <InArgument x:TypeArguments="sco:Collection(x:String)">
              <mca:CSharpValue x:TypeArguments="sco:Collection(x:String)">CC</mca:CSharpValue>
            </InArgument>
          </p:Email.CC>
          <p:Email.Subject>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">Title</mca:CSharpValue>
            </InArgument>
          </p:Email.Subject>
          <p:Email.To>
            <InArgument x:TypeArguments="sco:Collection(x:String)">
              <mca:CSharpValue x:TypeArguments="sco:Collection(x:String)">Recipients</mca:CSharpValue>
            </InArgument>
          </p:Email.To>
        </p:Email>
        <p:WriteToHistory Message="Workflow completed.  Email sent" />
      </Sequence>
      <sads:DebugSymbol.Symbol>9xCYD8TNyaUqMLbmdSkD+w9gUUM6XFNQMjAxM1xTcGVjaWFsT3BzRXZlbnQtMjAxM1xTcGVjaWFsT3BzRXZlbnRQYWdlc1xTZW5kTWFpbE1lc3NhZ2VcV29ya2Zsb3cueGFtbBYsA3oOAgEBNAVfEAIBHmAFeBACAQI1B0kcAgE+SgdeHwIBH2EHdhECAQV3B3d4AgEDPw1BKwIBRkYNRl8CAUA4DTorAgE/VQ1VZQIBOFsNW14CATJNDU1XAgEsWA1YWAIBJlINUm0CASBzDXNlAgEYaQ1pXQIBEmQNZFYCAQxuDW5QAgEGdyF3QgIBBEAPQCUDAUYBOQ85JQMBPwE=</sads:DebugSymbol.Symbol>
    </Sequence>
  </ss:Workflow.Implementation>
</ss:Workflow>